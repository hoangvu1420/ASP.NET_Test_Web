@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		var user = await UserManager.GetUserAsync(User);
		var nameToDisplay = string.IsNullOrEmpty(user.Name) ? user.UserName : user.Name;

		<li class="nav-item">
			<a class="nav-link text-light" id="shoppingCart" asp-area="Customer" asp-controller="ShoppingCart" asp-action="Index">
				@await Component.InvokeAsync("ShoppingCart") @* insert the view component *@
			</a>
		</li>

		<li class="nav-item">
			<a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @nameToDisplay!</a>
		</li>
		<li class="nav-item">
			<form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				<button id="logout" type="submit" class="nav-link btn btn-link border-0">Logout</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
		</li>
		<li class="nav-item">
			<a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
		</li>
	}
</ul>