@model BookStore.Models.ViewModels.ProductVM

<div class="card text-white bg-dark shadow border-0 mt-3">
	<div class="card-header bg-secondary bg-gradient">
		<div class="row">
			<div>
				<h3 class="text-dark">@(Model.Product.Id != 0 ? "Update" : "Create") Product</h3>
			</div>
		</div>
	</div>
	<div class="card-body p-3">
		<div class="container text-center">
			<figure>
				@if (Model.Product.Id != 0)
				{
					<img src="~/images/catHuh!!!.png" alt="Cat Image" width="300" />
				}
				else
				{
					<img src="~/images/catChild.png" alt="Cat Image" width="300" />
				}
				<figcaption>cat</figcaption>
			</figure>
		</div>
		<form method="post" enctype="multipart/form-data">
			<input asp-for=Product.Id type="hidden" />
			<input asp-for=Product.ImageUrl type="hidden" />
			<div class="row">
				<div class="col-9">
					<div class="form-floating mb-3 col-12">
						<input asp-for=Product.Title type="text" class="form-control border-0 shadow" id="inputName" placeholder="Enter category name" />
						<label asp-for=Product.Title class="form-label text-dark"></label>
						<span asp-validation-for=Product.Title class="text-danger"></span>
					</div>
					<div class="mb-3 col-12">
						<label asp-for=Product.Description class="form-label text-light"></label>
						<textarea asp-for="Product.Description" class="form-control border-0 shadow" id="inputDescription" placeholder="Enter desciption"></textarea>
					</div>
					<div class="form-floating mb-3 col-12">
						<select asp-for="Product.CategoryId" asp-items="@Model.CategoryList" class="form-select" id="selectCategory">
							<option disabled selected>-- Select Category --</option>
						</select>
						<label asp-for="Product.CategoryId" class="form-label text-dark"></label>
						<span asp-validation-for="Product.CategoryId" class="text-danger"></span>
					</div>
					<div class="form-floating mb-3 col-12">
						<input asp-for=Product.ISBN type="text" class="form-control border-0 shadow" id="inputISBN" placeholder="Enter ISBN" />
						<label asp-for=Product.ISBN class="form-label text-dark"></label>
						<span asp-validation-for=Product.ISBN class="text-danger"></span>
					</div>
					<div class="form-floating mb-3 col-12">
						<input asp-for=Product.Author type="text" class="form-control border-0 shadow" id="inputAuthor" placeholder="Enter author" />
						<label asp-for=Product.Author class="form-label text-dark"></label>
						<span asp-validation-for=Product.Author class="text-danger"></span>
					</div>
					<div class="form-floating mb-3 col-12">
						<input asp-for=Product.ListPrice type="number" class="form-control border-0 shadow" id="inputListPrice" placeholder="Enter list price">
						<label asp-for=Product.ListPrice class="form-label text-dark"></label>
						<span asp-validation-for=Product.ListPrice class="text-danger"></span>
					</div>
					<div class="form-floating mb-3 col-12">
						<input asp-for=Product.Price type="number" class="form-control border-0 shadow" id="inputPrice" placeholder="Enter price" />
						<label asp-for=Product.Price class="form-label text-dark"></label>
						<span asp-validation-for=Product.Price class="text-danger"></span>
					</div>
					<div class="form-floating mb-3 col-12">
						<input asp-for=Product.Price50 type="number" class="form-control border-0 shadow" id="inputPrice50" placeholder="Enter price" />
						<label asp-for=Product.Price50 class="form-label text-dark"></label>
						<span asp-validation-for=Product.Price50 class="text-danger"></span>
					</div>
					<div class="form-floating mb-3 col-12">
						<input asp-for=Product.Price100 type="number" class="form-control border-0 shadow" id="inputPrice100" placeholder="Enter price" />
						<label asp-for=Product.Price100 class="form-label text-dark"></label>
						<span asp-validation-for=Product.Price100 class="text-danger"></span>
					</div>
					<div class="mb-3 col-12">
						<label asp-for=Product.ImageUrl class="form-label text-light"></label>
						<input type="file" name="file" class="form-control border-0 shadow" id="inputImageUrl" placeholder="Enter Image URL" />
					</div>

					<div class="row">
						<div class="col-6 col-md-3">
							@if (Model.Product.Id != 0)
							{
								<button type="submit" class="btn btn-primary form-control">Update the product</button>
							}
							else
							{
								<button type="submit" class="btn btn-success form-control">Create new product</button>
							}
						</div>
						<div class="col-6 col-md-3">
							<a asp-controller="Product" asp-action="Index" class="btn btn-outline-secondary border form-control">Back to the list</a>
						</div>
					</div>
				</div>
				<div class="col-3">
					<img src="@Model.Product.ImageUrl" id="productImage" style="border: 1px solid #bbb9b9; border-radius: 5px; width: 100%" />
					<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
					<script>
						var defaultImageUrl = '@Url.Content(Model.Product.ImageUrl)';
						$(document).ready(function () {
							$('#inputImageUrl').change(function (e) {
								if (e.target.files[0]) {
									var reader = new FileReader();
									reader.onload = function (e) {
										$('#productImage').attr('src', e.target.result);
									}
									reader.readAsDataURL(e.target.files[0]);
								} else {
									$('#productImage').attr('src', '\\images\\product\\Default.png');
								}
							});
						});
					</script>
				</div>
			</div>
		</form>
	</div>
</div>


<partial name="_Notification"></partial>

@section Scripts {
	<script>
		tinymce.init({
			selector: 'textarea',
			plugins: 'anchor autolink codesample emoticons image link lists media searchreplace table visualblocks wordcount',
			toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | align lineheight | tinycomments | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
			tinycomments_mode: 'embedded',
			tinycomments_author: 'Author name',
			mergetags_list: [
				{ value: 'First.Name', title: 'First Name' },
				{ value: 'Email', title: 'Email' },
			],
			ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant")),
		});
	</script>
	@{
		<partial name="_ValidationScriptsPartial" />
	}
}
@*
The <partial> tag helper is used to render a partial view.
The _ValidationScriptsPartial partial view is used to render the validation scripts.
This view is used to render the validation scripts for client-side validation. Which means that the validation scripts are rendered in the browser, not on the server.
More specifically, the _ValidationScriptsPartial partial view renders the following scripts:
jquery.validate.js
jquery.validate.unobtrusive.js
These scripts are used to perform client-side validation.
Note: this only works for validation logic defined in the model class.
But, custom validation logic defined in the controller is not performed on the client-side.
*@





